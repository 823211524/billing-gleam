generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  passwordHash  String
  givenName     String
  surname       String
  address       String
  role          UserRole  @default(CONSUMER)
  isEnabled     Boolean   @default(true)
  disabledAt    DateTime?
  secretWord    String?   // Added for admin secret word
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  meters        Meter[]
  readings      Reading[]
  bills         Bill[]
}

model Meter {
  id          String    @id @default(uuid())
  qrCode      String    @unique
  longitude   Float
  latitude    Float
  isEnabled   Boolean   @default(true)
  secretWord  String?
  tableName   String?
  consumer    User?     @relation(fields: [consumerId], references: [id])
  consumerId  Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  readings    Reading[]
}

model Reading {
  id                  Int      @id @default(autoincrement())
  meter               Meter    @relation(fields: [meterId], references: [id])
  meterId             String
  reading             Float
  imageUrl            String
  validated           Boolean  @default(false)
  validatedByConsumer Boolean  @default(false)
  validatedByAdmin    Boolean  @default(false)
  year                Int
  month               Int
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [id])
  userId              Int
  bill                Bill?
}

model Bill {
  id           Int      @id @default(autoincrement())
  reading      Reading  @relation(fields: [readingId], references: [id])
  readingId    Int      @unique
  amount       Float
  consumption  Float
  pdfUrl       String
  paid         Boolean  @default(false)
  dueDate      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
}

enum UserRole {
  ADMIN
  CONSUMER
}